#+AUTHOR: Tony
#+STARTUP: overview

* OxWM — Oxidize Window Manager
A dynamic window manager written in /Rust🦀/, inspired by dwm but designed to evolve
on its own. Configuration is done in Rust source code, keeping with the suckless
philosophy of *"edit + recompile."*

This project is still in its early stages. Currently, it can claim ownership of
an X display and log incoming events.

* ⚙ Installation — Running with Nix Flakes
You can set up a reproducible development environment with Rust, Cargo, Xephyr, xterm, and
just by using the flake.

#+begin_src sh
git clone https://github.com/tonybanters/oxwm
cd oxwm

# enter the dev shell
nix develop

# build normally
cargo build
#+end_src

* 🧪 Running Tests with just
The =justfile= includes a =test= recipe that starts Xephyr on =:1=, launches
test clients (xterm, xclock), and runs oxwm in the foreground.

#+begin_src sh
# inside nix develop
just test
#+end_src

This should open a new Xephyr window. oxwm will attach to it and log X11
events in your host terminal. Clients like xterm/xclock will appear inside Xephyr.

* 🗺 Roadmap (High Level)
| Step | Task                                                                                  | Status |
|------+---------------------------------------------------------------------------------------+--------|
| 1    | Connect to X, claim =SubstructureRedirect=, print events                            | DONE   |
| 2    | Handle =MapRequest= and =ConfigureRequest= so clients can map and appear in Xephyr | ⏳      |
| 3    | Implement client tracking and a trivial tiling layout                              | ❌      |
| 4    | Add keybindings (Mod+j/k, Mod+Enter, etc.)                                          | ❌      |
| 5    | Per-tag state, multiple layouts, borders, focus handling                           | ❌      |
| 6    | ICCCM/EWMH basics (WM_DELETE_WINDOW, fullscreen, etc)                              | ❌      |
| 7    | Split into =oxwm-core= library and =oxwm-user= config crate                        | ❌      |
| 8    | Polish developer workflow (Nix flake, just, docs)                                   | ❌      |

* 📄 Status
- Rust + x11rb skeleton running
- Nix flake devShell available
- =just test= launches Xephyr, clients, and oxwm

* 📜 License
[[https://www.gnu.org/licenses/gpl-3.0.en.html][GPL]]


